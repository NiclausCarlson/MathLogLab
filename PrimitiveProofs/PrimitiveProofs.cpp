//
// Created by Nik Carlson on 01.09.2020.
//

#include "PrimitiveProofs.h"

PrimitiveProofs::PrimitiveProofs() {
    primitives.push_back({"P",
                          "Q",
                          "P->(Q->P&Q)",
                          "Q->P&Q",
                          "P&Q"});
    primitives.push_back({"!Q",
                          "P&Q->Q",
                          "!Q->(P&Q->!Q)",
                          "P&Q->!Q",
                          "(P&Q->Q)->((P&Q->!Q)->!(P&Q))",
                          "(P&Q->!Q)->!(P&Q)",
                          "!(P&Q)"});
    primitives.push_back({"!P",
                          "P&Q->P",
                          "!P->(P&Q->!P)",
                          "P&Q->!P",
                          "(P&Q->P)->((P&Q->!P)->!(P&Q))",
                          "(P&Q->!P)->!(P&Q)",
                          "!(P&Q)"});
    primitives.push_back({"!P",
                          "P&Q->P",
                          "!P->(P&Q->!P)",
                          "P&Q->!P",
                          "(P&Q->P)->((P&Q->!P)->!(P&Q))",
                          "(P&Q->!P)->!(P&Q)",
                          "!(P&Q)"});
    primitives.push_back({"Q",
                          "Q->(P->Q)",
                          "P->Q"});
    primitives.push_back({"P",
                          "!Q",
                          "(((P->Q)->P)->(((P->Q)->!P)->!(P->Q)))",
                          "(P->((P->Q)->P))",
                          "((P->Q)->P)",
                          "(((P->Q)->!P)->!(P->Q))",
                          "(!Q->((P->Q)->!Q))",
                          "((P->Q)->!Q)",
                          "((P->Q)->((P->!Q)->!P))",
                          "(!Q->(P->!Q))",
                          "((!Q->(P->!Q))->((P->Q)->(!Q->(P->!Q))))",
                          "((P->Q)->(!Q->(P->!Q)))",
                          "(((P->Q)->!Q)->(((P->Q)->(!Q->(P->!Q)))->((P->Q)->(P->!Q))))",
                          "(((P->Q)->(!Q->(P->!Q)))->((P->Q)->(P->!Q)))",
                          "((P->Q)->(P->!Q))",
                          "(((P->Q)->(P->!Q))->(((P->Q)->((P->!Q)->!P))->((P->Q)->!P)))",
                          "(((P->Q)->((P->!Q)->!P))->((P->Q)->!P))",
                          "((P->Q)->!P)",
                          "!(P->Q)"});
    primitives.push_back({"Q",
                          "Q->(P->Q)",
                          "P->Q"});
    primitives.push_back({"!P",
                          "(!P->(P->!P))",
                          "(P->!P)",
                          "(P->(!Q->P))",
                          "(!P->(!Q->!P))",
                          "((!P->(!Q->!P))->(P->(!P->(!Q->!P))))",
                          "(P->(!P->(!Q->!P)))",
                          "((P->!P)->((P->(!P->(!Q->!P)))->(P->(!Q->!P))))",
                          "((P->(!P->(!Q->!P)))->(P->(!Q->!P)))",
                          "(P->(!Q->!P))",
                          "((!Q->P)->((!Q->!P)->!!Q))",
                          "(((!Q->P)->((!Q->!P)->!!Q))->(P->((!Q->P)->((!Q->!P)->!!Q))))",
                          "(P->((!Q->P)->((!Q->!P)->!!Q)))",
                          "((P->(!Q->P))->((P->((!Q->P)->((!Q->!P)->!!Q)))->(P->((!Q->!P)->!!Q))))",
                          "((P->((!Q->P)->((!Q->!P)->!!Q)))->(P->((!Q->!P)->!!Q)))",
                          "(P->((!Q->!P)->!!Q))",
                          "((P->(!Q->!P))->((P->((!Q->!P)->!!Q))->(P->!!Q)))",
                          "((P->((!Q->!P)->!!Q))->(P->!!Q))",
                          "(P->!!Q)",
                          "(!!Q->Q)",
                          "((!!Q->Q)->(P->(!!Q->Q)))",
                          "(P->(!!Q->Q))",
                          "((P->!!Q)->((P->(!!Q->Q))->(P->Q)))",
                          "((P->(!!Q->Q))->(P->Q))",
                          "(P->Q)"});
    primitives.push_back({"P",
                          "P -> P|Q",
                          "P|Q"});
    primitives.push_back({"P",
                          "P -> P|Q",
                          "P|Q"});
    primitives.push_back({"Q",
                          "Q->P|Q",
                          "P|Q"});
    primitives.push_back({"!P",
                          "!Q",
                          "(((P|Q)->P)->(((P|Q)->!P)->!(P|Q)))",
                          "((P->P)->((Q->P)->((P|Q)->P)))",
                          "(P->(P->P))",
                          "((P->(P->P))->((P->((P->P)->P))->(P->P)))",
                          "((P->((P->P)->P))->(P->P))",
                          "(P->((P->P)->P))",
                          "(P->P)",
                          "((Q->P)->((P|Q)->P))",
                          "(!Q->(Q->!Q))",
                          "(Q->!Q)",
                          "(!!P->P)",
                          "((!!P->P)->(Q->(!!P->P)))",
                          "(Q->(!!P->P))",
                          "((!P->Q)->((!P->!Q)->!!P))",
                          "(((!P->Q)->((!P->!Q)->!!P))->(Q->((!P->Q)->((!P->!Q)->!!P))))",
                          "(Q->((!P->Q)->((!P->!Q)->!!P)))",
                          "(Q->(!P->Q))",
                          "((Q->(!P->Q))->((Q->((!P->Q)->((!P->!Q)->!!P)))->(Q->((!P->!Q)->!!P))))",
                          "((Q->((!P->Q)->((!P->!Q)->!!P)))->(Q->((!P->!Q)->!!P)))",
                          "(Q->((!P->!Q)->!!P))",
                          "(!Q->(!P->!Q))",
                          "((!Q->(!P->!Q))->(Q->(!Q->(!P->!Q))))",
                          "(Q->(!Q->(!P->!Q)))",
                          "((Q->!Q)->((Q->(!Q->(!P->!Q)))->(Q->(!P->!Q))))",
                          "((Q->(!Q->(!P->!Q)))->(Q->(!P->!Q)))",
                          "(Q->(!P->!Q))",
                          "((Q->(!P->!Q))->((Q->((!P->!Q)->!!P))->(Q->!!P)))",
                          "((Q->((!P->!Q)->!!P))->(Q->!!P))",
                          "(Q->!!P)",
                          "((Q->!!P)->((Q->(!!P->P))->(Q->P)))",
                          "((Q->(!!P->P))->(Q->P))",
                          "(Q->P)",
                          "((P|Q)->P)",
                          "(((P|Q)->!P)->!(P|Q))",
                          "(!P->((P|Q)->!P))",
                          "((P|Q)->!P)",
                          "!(P|Q)"});
    primitives.push_back({"P",
                          "((P)->((((!(P)))->(P))))",
                          "(((!(P)))->(P))",
                          "(((!(P)))->((((!(P)))->((!(P))))))",
                          "(((((!(P)))->((((!(P)))->((!(P)))))))->((((((!(P)))->((((((!(P)))->((!(P)))))->((!(P)))))))->((((!(P)))->((!(P))))))))",
                          "(((((!(P)))->((((((!(P)))->((!(P)))))->((!(P)))))))->((((!(P)))->((!(P))))))",
                          "(((!(P)))->((((((!(P)))->((!(P)))))->((!(P))))))",
                          "(((!(P)))->((!(P))))",
                          "(((((!(P)))->(P)))->((((((!(P)))->((!(P)))))->((!((!(P))))))))",
                          "(((((!(P)))->((!(P)))))->((!((!(P))))))",
                          "(!((!(P))))"});
    primitives.push_back({"!P"});

    primitives.push_back({"((P)->((P)|!(P)))",
                          "(!(P)->((P)|!(P)))",
                          "(((P)->((P)|!(P)))->(((P)->!((P)|!(P)))->!(P)))",
                          "((((P)->((P)|!(P)))->(((P)->!((P)|!(P)))->!(P)))->(((P)->((P)|!(P)))->(((P)->((P)|!(P)))->(((P)->!((P)|!(P)))->!(P)))))",
                          "(((P)->((P)|!(P)))->(((P)->((P)|!(P)))->(((P)->!((P)|!(P)))->!(P))))",
                          "((((P)->((P)|!(P)))->(((P)->!((P)|!(P)))->!(P)))->(!((P)|!(P))->(((P)->((P)|!(P)))->(((P)->!((P)|!(P)))->!(P)))))",
                          "(((((P)->((P)|!(P)))->(((P)->!((P)|!(P)))->!(P)))->(!((P)|!(P))->(((P)->((P)|!(P)))->(((P)->!((P)|!(P)))->!(P)))))->(((P)->((P)|!(P)))->((((P)->((P)|!(P)))->(((P)->!((P)|!(P)))->!(P)))->(!((P)|!(P))->(((P)->((P)|!(P)))->(((P)->!((P)|!(P)))->!(P)))))))",
                          "(((P)->((P)|!(P)))->((((P)->((P)|!(P)))->(((P)->!((P)|!(P)))->!(P)))->(!((P)|!(P))->(((P)->((P)|!(P)))->(((P)->!((P)|!(P)))->!(P))))))",
                          "((((P)->((P)|!(P)))->(((P)->((P)|!(P)))->(((P)->!((P)|!(P)))->!(P))))->((((P)->((P)|!(P)))->((((P)->((P)|!(P)))->(((P)->!((P)|!(P)))->!(P)))->(!((P)|!(P))->(((P)->((P)|!(P)))->(((P)->!((P)|!(P)))->!(P))))))->(((P)->((P)|!(P)))->(!((P)|!(P))->(((P)->((P)|!(P)))->(((P)->!((P)|!(P)))->!(P)))))))",
                          "((((P)->((P)|!(P)))->((((P)->((P)|!(P)))->(((P)->!((P)|!(P)))->!(P)))->(!((P)|!(P))->(((P)->((P)|!(P)))->(((P)->!((P)|!(P)))->!(P))))))->(((P)->((P)|!(P)))->(!((P)|!(P))->(((P)->((P)|!(P)))->(((P)->!((P)|!(P)))->!(P))))))",
                          "(((P)->((P)|!(P)))->(!((P)|!(P))->(((P)->((P)|!(P)))->(((P)->!((P)|!(P)))->!(P)))))",
                          "(((P)->((P)|!(P)))->(!((P)|!(P))->((P)->((P)|!(P)))))",
                          "((!((P)|!(P))->((P)->((P)|!(P))))->((!((P)|!(P))->(((P)->((P)|!(P)))->(((P)->!((P)|!(P)))->!(P))))->(!((P)|!(P))->(((P)->!((P)|!(P)))->!(P)))))",
                          "(((!((P)|!(P))->((P)->((P)|!(P))))->((!((P)|!(P))->(((P)->((P)|!(P)))->(((P)->!((P)|!(P)))->!(P))))->(!((P)|!(P))->(((P)->!((P)|!(P)))->!(P)))))->(((P)->((P)|!(P)))->((!((P)|!(P))->((P)->((P)|!(P))))->((!((P)|!(P))->(((P)->((P)|!(P)))->(((P)->!((P)|!(P)))->!(P))))->(!((P)|!(P))->(((P)->!((P)|!(P)))->!(P)))))))",
                          "(((P)->((P)|!(P)))->((!((P)|!(P))->((P)->((P)|!(P))))->((!((P)|!(P))->(((P)->((P)|!(P)))->(((P)->!((P)|!(P)))->!(P))))->(!((P)|!(P))->(((P)->!((P)|!(P)))->!(P))))))",
                          "((((P)->((P)|!(P)))->(!((P)|!(P))->((P)->((P)|!(P)))))->((((P)->((P)|!(P)))->((!((P)|!(P))->((P)->((P)|!(P))))->((!((P)|!(P))->(((P)->((P)|!(P)))->(((P)->!((P)|!(P)))->!(P))))->(!((P)|!(P))->(((P)->!((P)|!(P)))->!(P))))))->(((P)->((P)|!(P)))->((!((P)|!(P))->(((P)->((P)|!(P)))->(((P)->!((P)|!(P)))->!(P))))->(!((P)|!(P))->(((P)->!((P)|!(P)))->!(P)))))))",
                          "((((P)->((P)|!(P)))->((!((P)|!(P))->((P)->((P)|!(P))))->((!((P)|!(P))->(((P)->((P)|!(P)))->(((P)->!((P)|!(P)))->!(P))))->(!((P)|!(P))->(((P)->!((P)|!(P)))->!(P))))))->(((P)->((P)|!(P)))->((!((P)|!(P))->(((P)->((P)|!(P)))->(((P)->!((P)|!(P)))->!(P))))->(!((P)|!(P))->(((P)->!((P)|!(P)))->!(P))))))",
                          "(((P)->((P)|!(P)))->((!((P)|!(P))->(((P)->((P)|!(P)))->(((P)->!((P)|!(P)))->!(P))))->(!((P)|!(P))->(((P)->!((P)|!(P)))->!(P)))))",
                          "((((P)->((P)|!(P)))->(!((P)|!(P))->(((P)->((P)|!(P)))->(((P)->!((P)|!(P)))->!(P)))))->((((P)->((P)|!(P)))->((!((P)|!(P))->(((P)->((P)|!(P)))->(((P)->!((P)|!(P)))->!(P))))->(!((P)|!(P))->(((P)->!((P)|!(P)))->!(P)))))->(((P)->((P)|!(P)))->(!((P)|!(P))->(((P)->!((P)|!(P)))->!(P))))))",
                          "((((P)->((P)|!(P)))->((!((P)|!(P))->(((P)->((P)|!(P)))->(((P)->!((P)|!(P)))->!(P))))->(!((P)|!(P))->(((P)->!((P)|!(P)))->!(P)))))->(((P)->((P)|!(P)))->(!((P)|!(P))->(((P)->!((P)|!(P)))->!(P)))))",
                          "(((P)->((P)|!(P)))->(!((P)|!(P))->(((P)->!((P)|!(P)))->!(P))))",
                          "(!((P)|!(P))->((P)->!((P)|!(P))))",
                          "((!((P)|!(P))->((P)->!((P)|!(P))))->(((P)->((P)|!(P)))->(!((P)|!(P))->((P)->!((P)|!(P))))))",
                          "(((P)->((P)|!(P)))->(!((P)|!(P))->((P)->!((P)|!(P)))))",
                          "((!((P)|!(P))->((P)->!((P)|!(P))))->((!((P)|!(P))->(((P)->!((P)|!(P)))->!(P)))->(!((P)|!(P))->!(P))))",
                          "(((!((P)|!(P))->((P)->!((P)|!(P))))->((!((P)|!(P))->(((P)->!((P)|!(P)))->!(P)))->(!((P)|!(P))->!(P))))->(((P)->((P)|!(P)))->((!((P)|!(P))->((P)->!((P)|!(P))))->((!((P)|!(P))->(((P)->!((P)|!(P)))->!(P)))->(!((P)|!(P))->!(P))))))",
                          "(((P)->((P)|!(P)))->((!((P)|!(P))->((P)->!((P)|!(P))))->((!((P)|!(P))->(((P)->!((P)|!(P)))->!(P)))->(!((P)|!(P))->!(P)))))",
                          "((((P)->((P)|!(P)))->(!((P)|!(P))->((P)->!((P)|!(P)))))->((((P)->((P)|!(P)))->((!((P)|!(P))->((P)->!((P)|!(P))))->((!((P)|!(P))->(((P)->!((P)|!(P)))->!(P)))->(!((P)|!(P))->!(P)))))->(((P)->((P)|!(P)))->((!((P)|!(P))->(((P)->!((P)|!(P)))->!(P)))->(!((P)|!(P))->!(P))))))",
                          "((((P)->((P)|!(P)))->((!((P)|!(P))->((P)->!((P)|!(P))))->((!((P)|!(P))->(((P)->!((P)|!(P)))->!(P)))->(!((P)|!(P))->!(P)))))->(((P)->((P)|!(P)))->((!((P)|!(P))->(((P)->!((P)|!(P)))->!(P)))->(!((P)|!(P))->!(P)))))",
                          "(((P)->((P)|!(P)))->((!((P)|!(P))->(((P)->!((P)|!(P)))->!(P)))->(!((P)|!(P))->!(P))))",
                          "((((P)->((P)|!(P)))->(!((P)|!(P))->(((P)->!((P)|!(P)))->!(P))))->((((P)->((P)|!(P)))->((!((P)|!(P))->(((P)->!((P)|!(P)))->!(P)))->(!((P)|!(P))->!(P))))->(((P)->((P)|!(P)))->(!((P)|!(P))->!(P)))))",
                          "((((P)->((P)|!(P)))->((!((P)|!(P))->(((P)->!((P)|!(P)))->!(P)))->(!((P)|!(P))->!(P))))->(((P)->((P)|!(P)))->(!((P)|!(P))->!(P))))",
                          "(((P)->((P)|!(P)))->(!((P)|!(P))->!(P)))",
                          "(!((P)|!(P))->!(P))",
                          "((!(P)->((P)|!(P)))->((!(P)->!((P)|!(P)))->!!(P)))",
                          "(((!(P)->((P)|!(P)))->((!(P)->!((P)|!(P)))->!!(P)))->((!(P)->((P)|!(P)))->((!(P)->((P)|!(P)))->((!(P)->!((P)|!(P)))->!!(P)))))",
                          "((!(P)->((P)|!(P)))->((!(P)->((P)|!(P)))->((!(P)->!((P)|!(P)))->!!(P))))",
                          "(((!(P)->((P)|!(P)))->((!(P)->!((P)|!(P)))->!!(P)))->(!((P)|!(P))->((!(P)->((P)|!(P)))->((!(P)->!((P)|!(P)))->!!(P)))))",
                          "((((!(P)->((P)|!(P)))->((!(P)->!((P)|!(P)))->!!(P)))->(!((P)|!(P))->((!(P)->((P)|!(P)))->((!(P)->!((P)|!(P)))->!!(P)))))->((!(P)->((P)|!(P)))->(((!(P)->((P)|!(P)))->((!(P)->!((P)|!(P)))->!!(P)))->(!((P)|!(P))->((!(P)->((P)|!(P)))->((!(P)->!((P)|!(P)))->!!(P)))))))",
                          "((!(P)->((P)|!(P)))->(((!(P)->((P)|!(P)))->((!(P)->!((P)|!(P)))->!!(P)))->(!((P)|!(P))->((!(P)->((P)|!(P)))->((!(P)->!((P)|!(P)))->!!(P))))))",
                          "(((!(P)->((P)|!(P)))->((!(P)->((P)|!(P)))->((!(P)->!((P)|!(P)))->!!(P))))->(((!(P)->((P)|!(P)))->(((!(P)->((P)|!(P)))->((!(P)->!((P)|!(P)))->!!(P)))->(!((P)|!(P))->((!(P)->((P)|!(P)))->((!(P)->!((P)|!(P)))->!!(P))))))->((!(P)->((P)|!(P)))->(!((P)|!(P))->((!(P)->((P)|!(P)))->((!(P)->!((P)|!(P)))->!!(P)))))))",
                          "(((!(P)->((P)|!(P)))->(((!(P)->((P)|!(P)))->((!(P)->!((P)|!(P)))->!!(P)))->(!((P)|!(P))->((!(P)->((P)|!(P)))->((!(P)->!((P)|!(P)))->!!(P))))))->((!(P)->((P)|!(P)))->(!((P)|!(P))->((!(P)->((P)|!(P)))->((!(P)->!((P)|!(P)))->!!(P))))))",
                          "((!(P)->((P)|!(P)))->(!((P)|!(P))->((!(P)->((P)|!(P)))->((!(P)->!((P)|!(P)))->!!(P)))))",
                          "((!(P)->((P)|!(P)))->(!((P)|!(P))->(!(P)->((P)|!(P)))))",
                          "((!((P)|!(P))->(!(P)->((P)|!(P))))->((!((P)|!(P))->((!(P)->((P)|!(P)))->((!(P)->!((P)|!(P)))->!!(P))))->(!((P)|!(P))->((!(P)->!((P)|!(P)))->!!(P)))))",
                          "(((!((P)|!(P))->(!(P)->((P)|!(P))))->((!((P)|!(P))->((!(P)->((P)|!(P)))->((!(P)->!((P)|!(P)))->!!(P))))->(!((P)|!(P))->((!(P)->!((P)|!(P)))->!!(P)))))->((!(P)->((P)|!(P)))->((!((P)|!(P))->(!(P)->((P)|!(P))))->((!((P)|!(P))->((!(P)->((P)|!(P)))->((!(P)->!((P)|!(P)))->!!(P))))->(!((P)|!(P))->((!(P)->!((P)|!(P)))->!!(P)))))))",
                          "((!(P)->((P)|!(P)))->((!((P)|!(P))->(!(P)->((P)|!(P))))->((!((P)|!(P))->((!(P)->((P)|!(P)))->((!(P)->!((P)|!(P)))->!!(P))))->(!((P)|!(P))->((!(P)->!((P)|!(P)))->!!(P))))))",
                          "(((!(P)->((P)|!(P)))->(!((P)|!(P))->(!(P)->((P)|!(P)))))->(((!(P)->((P)|!(P)))->((!((P)|!(P))->(!(P)->((P)|!(P))))->((!((P)|!(P))->((!(P)->((P)|!(P)))->((!(P)->!((P)|!(P)))->!!(P))))->(!((P)|!(P))->((!(P)->!((P)|!(P)))->!!(P))))))->((!(P)->((P)|!(P)))->((!((P)|!(P))->((!(P)->((P)|!(P)))->((!(P)->!((P)|!(P)))->!!(P))))->(!((P)|!(P))->((!(P)->!((P)|!(P)))->!!(P)))))))",
                          "(((!(P)->((P)|!(P)))->((!((P)|!(P))->(!(P)->((P)|!(P))))->((!((P)|!(P))->((!(P)->((P)|!(P)))->((!(P)->!((P)|!(P)))->!!(P))))->(!((P)|!(P))->((!(P)->!((P)|!(P)))->!!(P))))))->((!(P)->((P)|!(P)))->((!((P)|!(P))->((!(P)->((P)|!(P)))->((!(P)->!((P)|!(P)))->!!(P))))->(!((P)|!(P))->((!(P)->!((P)|!(P)))->!!(P))))))",
                          "((!(P)->((P)|!(P)))->((!((P)|!(P))->((!(P)->((P)|!(P)))->((!(P)->!((P)|!(P)))->!!(P))))->(!((P)|!(P))->((!(P)->!((P)|!(P)))->!!(P)))))",
                          "(((!(P)->((P)|!(P)))->(!((P)|!(P))->((!(P)->((P)|!(P)))->((!(P)->!((P)|!(P)))->!!(P)))))->(((!(P)->((P)|!(P)))->((!((P)|!(P))->((!(P)->((P)|!(P)))->((!(P)->!((P)|!(P)))->!!(P))))->(!((P)|!(P))->((!(P)->!((P)|!(P)))->!!(P)))))->((!(P)->((P)|!(P)))->(!((P)|!(P))->((!(P)->!((P)|!(P)))->!!(P))))))",
                          "(((!(P)->((P)|!(P)))->((!((P)|!(P))->((!(P)->((P)|!(P)))->((!(P)->!((P)|!(P)))->!!(P))))->(!((P)|!(P))->((!(P)->!((P)|!(P)))->!!(P)))))->((!(P)->((P)|!(P)))->(!((P)|!(P))->((!(P)->!((P)|!(P)))->!!(P)))))",
                          "((!(P)->((P)|!(P)))->(!((P)|!(P))->((!(P)->!((P)|!(P)))->!!(P))))",
                          "(!((P)|!(P))->(!(P)->!((P)|!(P))))",
                          "((!((P)|!(P))->(!(P)->!((P)|!(P))))->((!(P)->((P)|!(P)))->(!((P)|!(P))->(!(P)->!((P)|!(P))))))",
                          "((!(P)->((P)|!(P)))->(!((P)|!(P))->(!(P)->!((P)|!(P)))))",
                          "((!((P)|!(P))->(!(P)->!((P)|!(P))))->((!((P)|!(P))->((!(P)->!((P)|!(P)))->!!(P)))->(!((P)|!(P))->!!(P))))",
                          "(((!((P)|!(P))->(!(P)->!((P)|!(P))))->((!((P)|!(P))->((!(P)->!((P)|!(P)))->!!(P)))->(!((P)|!(P))->!!(P))))->((!(P)->((P)|!(P)))->((!((P)|!(P))->(!(P)->!((P)|!(P))))->((!((P)|!(P))->((!(P)->!((P)|!(P)))->!!(P)))->(!((P)|!(P))->!!(P))))))",
                          "((!(P)->((P)|!(P)))->((!((P)|!(P))->(!(P)->!((P)|!(P))))->((!((P)|!(P))->((!(P)->!((P)|!(P)))->!!(P)))->(!((P)|!(P))->!!(P)))))",
                          "(((!(P)->((P)|!(P)))->(!((P)|!(P))->(!(P)->!((P)|!(P)))))->(((!(P)->((P)|!(P)))->((!((P)|!(P))->(!(P)->!((P)|!(P))))->((!((P)|!(P))->((!(P)->!((P)|!(P)))->!!(P)))->(!((P)|!(P))->!!(P)))))->((!(P)->((P)|!(P)))->((!((P)|!(P))->((!(P)->!((P)|!(P)))->!!(P)))->(!((P)|!(P))->!!(P))))))",
                          "(((!(P)->((P)|!(P)))->((!((P)|!(P))->(!(P)->!((P)|!(P))))->((!((P)|!(P))->((!(P)->!((P)|!(P)))->!!(P)))->(!((P)|!(P))->!!(P)))))->((!(P)->((P)|!(P)))->((!((P)|!(P))->((!(P)->!((P)|!(P)))->!!(P)))->(!((P)|!(P))->!!(P)))))",
                          "((!(P)->((P)|!(P)))->((!((P)|!(P))->((!(P)->!((P)|!(P)))->!!(P)))->(!((P)|!(P))->!!(P))))",
                          "(((!(P)->((P)|!(P)))->(!((P)|!(P))->((!(P)->!((P)|!(P)))->!!(P))))->(((!(P)->((P)|!(P)))->((!((P)|!(P))->((!(P)->!((P)|!(P)))->!!(P)))->(!((P)|!(P))->!!(P))))->((!(P)->((P)|!(P)))->(!((P)|!(P))->!!(P)))))",
                          "(((!(P)->((P)|!(P)))->((!((P)|!(P))->((!(P)->!((P)|!(P)))->!!(P)))->(!((P)|!(P))->!!(P))))->((!(P)->((P)|!(P)))->(!((P)|!(P))->!!(P))))",
                          "((!(P)->((P)|!(P)))->(!((P)|!(P))->!!(P)))",
                          "(!((P)|!(P))->!!(P))",
                          "((!((P)|!(P))->!(P))->((!((P)|!(P))->!!(P))->!!((P)|!(P))))",
                          "((!((P)|!(P))->!!(P))->!!((P)|!(P)))",
                          "!!((P)|!(P))",
                          "(!!((P)|!(P))->((P)|!(P)))",
                          "((P)|!(P))"});
    int index = 0;
    for (auto &i:primitives) {
        parsedPrimitives.emplace_back();
        for (auto &j:i) {
            parsedPrimitives[index].push_back(parse(j));
        }
        ++index;
    }
}

std::vector<ASTree *> PrimitiveProofs::getWithReplace(int index, ASTree *p, ASTree *q) {
    std::vector<ASTree *> result;
    for (auto &i:parsedPrimitives[index]) {
        ASTree *tmp = getCopy(i);
        replace(tmp, p, q);
        result.push_back(tmp);
    }
    return result;
}

std::vector<ASTree *> PrimitiveProofs::getWithReplace(int index, ASTree *p) {
    std::vector<ASTree *> result;
    for (auto &i:parsedPrimitives[index]) {
        result.push_back(getCopy(i));
        replace(*(result.end() - 1), p);
    }
    return result;
}

void PrimitiveProofs::insertWithReplace(int index, ASTree *p, std::vector<ASTree *> &result) {
    for (auto &i:parsedPrimitives[index]) {
        result.push_back(getCopy(i));
        replace(*(result.end() - 1), p);
    }
}

